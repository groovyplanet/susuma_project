<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.susuma.member.model.MemberMapper">

	<!-- [1] 회원 목록 -->
	<select id="selectMembers" parameterType="map"
		resultType="com.susuma.member.model.MemberDTO">
		SELECT *
		FROM (
		SELECT A.*, ROWNUM AS RN
		FROM (
		SELECT ME_NO, TYPE, EMAIL,
		PW, NAME, ADDRESS, ADDRESS_DETAIL, LATITUDE, LONGITUDE, PHONE_NUM,
		EMAIL_NOTIFICATION, PROFILE_PHOTO, JOIN_APPROVAL, JOIN_APPROVAL_TIME,
		BUSINESS_NUMBER, SHORT_DESCRIPTION, MAX_DISTANCE, DESCRIPTION,
		WORK_HOURS, POINT, STATUS, M.INSERT_TIME, M.UPDATE_TIME
		, C.CA_NO
		,
		C.CA_NAME
		, CR.CA_NO AS CA_ROOT_NO
		, CR.CA_NAME AS CA_ROOT_NAME
		FROM
		MEMBER M
		LEFT JOIN CATEGORY C
		ON C.CA_NO = M.CA_NO
		LEFT JOIN CATEGORY CR
		ON CR.CA_NO = C.ROOT_NO
		WHERE M.TYPE = #{type}
		<if test="joinApproval != 'all'">
			AND M.JOIN_APPROVAL = #{joinApproval}
		</if>
		<if test="rootNo != 'all'">
			AND CR.CA_NO = #{rootNo}
		</if>
		<if test="rootNo != 'all' and caNo != 'all'">
			AND C.CA_NO = #{caNo}
		</if>
		ORDER BY M.${sortField} ${sortOrder} NULLS LAST
		) A
		)
		WHERE RN BETWEEN
		#{startRow} and #{endRow}
	</select>

	<!-- [1-2] 회원 목록 수(페이징 처리) -->
	<select id="countMembers" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER M
		LEFT JOIN CATEGORY C
		ON C.CA_NO = M.CA_NO
		LEFT JOIN CATEGORY CR
		ON CR.CA_NO = C.ROOT_NO
		WHERE M.TYPE = #{type}
		<if test="joinApproval != 'all'">
			AND M.JOIN_APPROVAL = #{joinApproval}
		</if>
		<if test="rootNo != 'all'">
			AND CR.CA_NO = #{rootNo}
		</if>
		<if test="rootNo != 'all' and caNo != 'all'">
			AND C.CA_NO = #{caNo}
		</if>
	</select>

	<!-- [2] 회원(me_no / email,pw) -->
	<select id="selectMember" parameterType="map"
		resultType="com.susuma.member.model.MemberDTO">
		SELECT ME_NO, TYPE, EMAIL, PW, NAME, ADDRESS, ADDRESS_DETAIL,
		LATITUDE, LONGITUDE, PHONE_NUM, EMAIL_NOTIFICATION, PROFILE_PHOTO,
		JOIN_APPROVAL, JOIN_APPROVAL_TIME, BUSINESS_NUMBER, SHORT_DESCRIPTION,
		MAX_DISTANCE, DESCRIPTION, WORK_HOURS, POINT, STATUS, M.INSERT_TIME,
		M.UPDATE_TIME
		, C.CA_NO
		, C.CA_NAME
		, CR.CA_NO AS CA_ROOT_NO
		, CR.CA_NAME
		AS CA_ROOT_NAME
		FROM MEMBER M
		LEFT JOIN CATEGORY C
		ON C.CA_NO = M.CA_NO
		LEFT JOIN CATEGORY CR
		ON CR.CA_NO = C.ROOT_NO
		WHERE 1 = 1
		<if test="meNo != null">
			AND M.ME_NO = #{meNo}
		</if>
		<if test="email != null and pw != null">
			AND M.EMAIL = #{email} AND M.PW = #{pw}
		</if>
		<if test="email != null and pw == null">
			AND M.EMAIL = #{email}
		</if>
	</select>

	<!-- [3] 회원 등록 -->
	<insert id="insertMember"
		parameterType="com.susuma.member.model.MemberDTO">
		INSERT INTO MEMBER (ME_NO, TYPE, EMAIL, PW, NAME,
		PHONE_NUM, ADDRESS, ADDRESS_DETAIL, LATITUDE, LONGITUDE,
		EMAIL_NOTIFICATION, BUSINESS_NUMBER, SHORT_DESCRIPTION, MAX_DISTANCE,
		DESCRIPTION, WORK_HOURS, CA_NO, JOIN_APPROVAL, POINT, STATUS)
		VALUES
		(MEMBER_SEQ.NEXTVAL, #{type}, #{email}, #{pw}, #{name}, #{phoneNum},
		#{address}, #{addressDetail}, #{latitude}, #{longitude},
		#{emailNotification}, #{businessNumber}, #{shortDescription},
		#{maxDistance}, #{description}, #{workHours}, #{caNo},
		#{joinApproval}, #{point}, #{status}
		)
	</insert>

	<!-- [4] 회원 수정 -->
	<update id="updateMember"
		parameterType="com.susuma.member.model.MemberDTO">
		UPDATE MEMBER
		SET
		EMAIL = #{email},
		PW = #{pw},
		NAME =
		#{name},
		PHONE_NUM = #{phoneNum},
		ADDRESS = #{address},
		ADDRESS_DETAIL =
		#{addressDetail},
		LATITUDE = #{latitude},
		LONGITUDE = #{longitude},
		EMAIL_NOTIFICATION = #{emailNotification},
		BUSINESS_NUMBER =
		#{businessNumber},
		SHORT_DESCRIPTION = #{shortDescription},
		MAX_DISTANCE = #{maxDistance},
		DESCRIPTION = #{description},
		WORK_HOURS
		= #{workHours},
		CA_NO = #{caNo},
		JOIN_APPROVAL = #{joinApproval},
		POINT =
		#{point},
		STATUS = #{status},
		UPDATE_TIME = SYSDATE
		WHERE
		ME_NO = #{meNo}
	</update>

	<!-- [4-2] 회원 수정(수리기사 승인) -->
	<delete id="updateMemberApprove" parameterType="string">
		UPDATE MEMBER
		SET
		JOIN_APPROVAL = 'Y',
		JOIN_APPROVAL_TIME = SYSDATE
		WHERE
		ME_NO = #{meNo}
	</delete>

	<!-- [5] 회원 삭제 -->
	<delete id="deleteMember" parameterType="string">
		DELETE FROM MEMBER
		WHERE
		ME_NO = #{meNo}
	</delete>

	<select id="getPassword" parameterType="string"
		resultType="string">
		SELECT pw
		FROM MEMBER
		WHERE ME_NO = #{meNo}
	</select>

	<select id="selectMemberById"
		resultType="com.susuma.member.model.MemberDTO">
		SELECT * FROM MEMBER WHERE ME_NO = #{meNo}
	</select>

	<select id="getMemberByNo"
		resultType="com.susuma.member.model.MemberDTO">
		SELECT ME_NO, NAME, ADDRESS, WORK_HOURS
		FROM MEMBER
		WHERE ME_NO = #{meNo}
	</select>
	
	


</mapper>